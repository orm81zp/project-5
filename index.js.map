{"version":3,"file":"index.js","sources":["../src/js/api/index.js","../src/js/utils/render.js","../src/js/exercises.js"],"sourcesContent":["import axios from 'axios';\n\nconst client = axios.create({\n  baseURL: 'https://your-energy.b.goit.study/api',\n  headers: { Accept: 'application/json' },\n});\n\nclass Api {\n  /**\n   * Get Exercises By Filters\n   *\n   * @param {{ bodypart?: string, muscles?: string, equipment?: string, keyword?: string, page?: number, limit?: number }} params\n   */\n  static async getExercises(params = {}) {\n    const { page = 1, limit = 10 } = params;\n\n    const response = await client.get('/exercises', {\n      params: { page, limit, ...params },\n    });\n    return response.data;\n  }\n\n  /**\n   * Add Exercises's Rating\n   *\n   * @param {number} exerciseId\n   * @param {{ rate: number, email: string, review: string }} data\n   */\n  static async addRateByExerciseId(exerciseId, data) {\n    const response = await client.patch(\n      `/exercises/${exerciseId}/rating`,\n      data\n    );\n    return response.data;\n  }\n\n  /**\n   * Get Exercise By Id\n   *\n   * @param {number} exerciseId\n   */\n  static async getExerciseById(exerciseId) {\n    const response = await client.get(`/exercises/${exerciseId}`);\n    return response.data;\n  }\n\n  /**\n   * Get Filters Of Exercises\n   *\n   * @param {{ filter?: string, page?: number, limit?: number }} params\n   */\n  static async getFilters(params = {}) {\n    const { page = 1, limit = 12 } = params;\n    const response = await client.get('/filters', {\n      params: { page, limit, ...params },\n    });\n    return response.data;\n  }\n\n  /**\n   * Get Quote of the day\n   */\n  static async getQuote() {\n    const response = await client.get('/quote');\n    return response.data;\n  }\n\n  /**\n   * Order subscription to new exercises\n   *\n   * @param {{ email: string }} data\n   */\n  static async addSubscription(data) {\n    const response = await client.post('/subscription', data);\n    return response.data;\n  }\n}\n\nexport default Api;\n","export const renderFilters = (filters, container) => {\n  const adjacentText = filters\n    .map(name => `<li class=\"item\"><a href=\"#\">${name}</a></li>`)\n    .join('');\n\n  container.insertAdjacentHTML('beforeend', adjacentText);\n};\n\nexport const renderByFilters = (cards, container) => {\n  const adjacentText = cards\n    .map(\n      ({ filter, name, imgURL }) =>\n        `\n      <li class=\"card-item\">\n        <a class=\"card-link\" href=\"#\">\n          <img\n            src=\"${imgURL}\"\n            alt=\"${name}\"\n          />\n          <div class=\"card-content\" data-category=\"${name}\">\n            <div class=\"card-name\">${name}</div>\n            <div class=\"card-filter\">${filter}</div>\n          </div>\n        </a>\n      </li>\n      `\n    )\n    .join('');\n\n  container.insertAdjacentHTML('beforeend', adjacentText);\n};\n\nexport const renderByExercises = (exercises, container) => {\n  const adjacentText = exercises\n    .map(\n      ({ bodyPart, burnedCalories, gifUrl, name, rating, target, time, _id }) =>\n        `\n      <li class=\"card-item\" data-id=\"${_id}\">\n        <div class=\"card-header\">\n          <div class=\"badge-wrapper\">\n            <div class=\"__badge\">WORKOUT</div>\n            <div class=\"__rating\">${rating}</div>\n          </div>\n          <div>\n            <div class=\"__start\">Start</div>\n          </div>\n        </div>\n        <div class=\"card-content\">\n          <img\n            src=\"${gifUrl}\"\n            alt=\"${target}\"\n            width=\"24\"\n            height=\"24\"\n          />\n          <span class=\"card-content-name\" title=\"${name}\">${name}</span>\n        </div>\n        <div class=\"card-footer\">\n          <ul class=\"card-footer-list\">\n            <li class=\"item\">\n              <span class=\"item-name\">Burned calories:</span><span class=\"item-value\" title=\"${burnedCalories} / ${time} min\">${burnedCalories} / ${time} min</span>\n            </li>\n            <li class=\"item\">\n              <span class=\"item-name\">Body part:</span><span class=\"item-value\" title=\"${bodyPart}\">${bodyPart}</span>\n            </li>\n            <li class=\"item\">\n              <span class=\"item-name\">Target:</span><span class=\"item-value\" title=\"${target}\">${target}</span>\n            </li>\n          </ul>\n        </div>\n      </li>\n      `\n    )\n    .join('');\n\n  container.insertAdjacentHTML('beforeend', adjacentText);\n};\n","import Api from './api';\nimport { renderByExercises, renderByFilters, renderFilters } from './utils';\n\n(() => {\n  const HIDDEN_CLASS = 'hidden';\n  const FILTERS = {\n    muscles: 'Muscles',\n    bodyParts: 'Body parts',\n    equipment: 'Equipment',\n  };\n  const DEFAULT_FILTER = FILTERS.muscles;\n  const SEARCH_FILTER_MAPPING = {\n    [FILTERS.muscles]: 'muscles',\n    [FILTERS.bodyParts]: 'bodypart',\n    [FILTERS.equipment]: 'equipment',\n  };\n  const state = {\n    filter: null,\n    exercise: null,\n  };\n\n  const breadcrumbsNav = document.getElementById('breadcrumbs-nav');\n  const breadcrumbsHome = breadcrumbsNav.querySelector('.item-home');\n  const breadcrumbsFilters = document.getElementById('breadcrumbs-filters');\n  const exercisesWrapper = document.querySelector('.exercises');\n  const cards = exercisesWrapper.querySelector('.cards');\n  const cardsExercises = exercisesWrapper.querySelector('.cards-exercises');\n  const searchField = document.getElementById('search-field');\n  const searchForm = searchField.querySelector('.search-form');\n  const searchFieldInput = searchField.querySelector('.search-input');\n  const searchFieldSubmit = searchField.querySelector('.seach-submit');\n  const searchFieldReset = searchField.querySelector('.seach-reset');\n\n  // helpers\n  const showLoader = (shouldHide = false) => {\n    if (shouldHide) {\n      const loader = exercisesWrapper.querySelector('.loader');\n\n      if (loader) {\n        loader.remove();\n      }\n    } else {\n      const adjacentText = `<div class=\"loader\"></div>`;\n      exercisesWrapper.insertAdjacentHTML('beforeend', adjacentText);\n    }\n  };\n\n  /**\n   * Show / hide the search field's reset button\n   *\n   * @param {boolean} shouldHide\n   */\n  const showResetButton = (shouldHide = false) => {\n    if (shouldHide) {\n      searchFieldReset.classList.add(HIDDEN_CLASS);\n    } else {\n      searchFieldReset.classList.remove(HIDDEN_CLASS);\n    }\n  };\n\n  /**\n   * Show / hide and clear the search field's input\n   *\n   * @param {boolean} shouldHide\n   * @param {boolean} shouldClear\n   */\n  const showSearchField = (shouldHide = false, shouldClear = false) => {\n    if (shouldHide) {\n      searchField.classList.add(HIDDEN_CLASS);\n    } else {\n      searchField.classList.remove(HIDDEN_CLASS);\n    }\n\n    if (shouldClear) {\n      searchFieldInput.value = '';\n    }\n  };\n\n  /**\n   * Clear all cards, should be called before calling api\n   */\n  const clearCards = () => {\n    cards.innerHTML = '';\n    cardsExercises.innerHTML = '';\n  };\n\n  /**\n   * Clear an exercise in breadcrums\n   */\n  const clearBreadcrumbs = () => {\n    const categoryItem = breadcrumbsNav.querySelector('.item-exercise');\n    categoryItem.removeAttribute('title');\n    categoryItem.classList.remove('active');\n    categoryItem.innerText = '';\n  };\n\n  /**\n   * Add / update an exercise in breadcrums\n   */\n  const updateBreadcrumbs = exercise => {\n    const categoryItem = breadcrumbsNav.querySelector('.item-exercise');\n    categoryItem.setAttribute('title', exercise);\n    categoryItem.classList.add('active');\n    categoryItem.innerText = exercise;\n  };\n\n  /**\n   * Calls API to get exercises\n   *\n   * @param {string} filter\n   * @param {string} exercise\n   * @param {string} keyword\n   */\n  const searchByExercise = async (filter, exercise, keyword = '') => {\n    try {\n      clearCards();\n      showLoader();\n      updateBreadcrumbs(exercise);\n\n      const params = {\n        [SEARCH_FILTER_MAPPING[filter]]: exercise,\n        keyword,\n      };\n\n      const response = await Api.getExercises(params);\n      const { results } = response;\n      state.exercise = exercise;\n\n      renderByExercises(results, cardsExercises);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      showLoader(true);\n      showSearchField();\n    }\n  };\n\n  /**\n   * Calls API to get filters\n   *\n   * @param {string} filter\n   */\n  const searchByFilter = async filter => {\n    try {\n      clearCards();\n      clearBreadcrumbs();\n      showLoader();\n      showSearchField(true, true);\n      const response = await Api.getFilters({ filter });\n      const { results } = response;\n      state.filter = filter;\n\n      renderByFilters(results, cards);\n\n      // highlight active filter\n      const filterElements = breadcrumbsFilters.querySelectorAll('.item');\n\n      for (let filterElement of filterElements) {\n        if (filterElement.innerText === filter) {\n          filterElement.classList.add('active');\n        } else {\n          filterElement.classList.remove('active');\n        }\n      }\n    } catch (error) {\n      console.error(error);\n    } finally {\n      showLoader(true);\n    }\n  };\n\n  // filter click listerner\n  const filterClickHandler = event => {\n    event.preventDefault();\n\n    if (event.target.nodeName !== 'A') {\n      return;\n    }\n\n    const filter = event.target.innerText.trim();\n    searchByFilter(filter);\n  };\n\n  breadcrumbsFilters.addEventListener('click', filterClickHandler);\n\n  // exercise click listerner\n  const exerciseClickHandler = event => {\n    event.preventDefault();\n    const { filter } = state;\n\n    if (event.target.nodeName !== 'DIV') {\n      return;\n    }\n\n    const exercise = event.target.dataset.category.trim();\n\n    if (exercise) {\n      searchByExercise(filter, exercise);\n    }\n  };\n\n  cards.addEventListener('click', exerciseClickHandler);\n\n  // form listerners\n  const searchHandler = event => {\n    event.preventDefault();\n    const { filter, exercise } = state;\n    const keyword = searchFieldInput.value.trim();\n\n    if (keyword) {\n      searchByExercise(filter, exercise, keyword);\n    }\n  };\n\n  const formResetHandler = () => {\n    showResetButton(true);\n    const { filter, exercise } = state;\n    searchByExercise(filter, exercise);\n  };\n\n  searchFieldSubmit.addEventListener('click', searchHandler);\n  searchForm.addEventListener('submit', searchHandler);\n  searchForm.addEventListener('reset', formResetHandler);\n\n  // search input listerner\n  const searchInputHandler = event => {\n    if (event.target.value.trim()) {\n      showResetButton();\n    } else {\n      showResetButton(true);\n    }\n  };\n\n  searchFieldInput.addEventListener('input', searchInputHandler);\n\n  breadcrumbsHome.addEventListener('click', () => {\n    searchByFilter(DEFAULT_FILTER);\n  });\n\n  // init\n  // rendering filters\n  renderFilters(Object.values(FILTERS), breadcrumbsFilters);\n\n  // rendering cards by default filter\n  searchByFilter(DEFAULT_FILTER);\n})();\n"],"names":["client","axios","Api","params","page","limit","exerciseId","data","renderFilters","filters","container","adjacentText","name","renderByFilters","cards","filter","imgURL","renderByExercises","exercises","bodyPart","burnedCalories","gifUrl","rating","target","time","_id","HIDDEN_CLASS","FILTERS","DEFAULT_FILTER","SEARCH_FILTER_MAPPING","state","breadcrumbsNav","breadcrumbsHome","breadcrumbsFilters","exercisesWrapper","cardsExercises","searchField","searchForm","searchFieldInput","searchFieldSubmit","searchFieldReset","showLoader","shouldHide","loader","showResetButton","showSearchField","shouldClear","clearCards","clearBreadcrumbs","categoryItem","updateBreadcrumbs","exercise","searchByExercise","keyword","response","results","error","searchByFilter","filterElements","filterElement","filterClickHandler","event","exerciseClickHandler","searchHandler","formResetHandler","searchInputHandler"],"mappings":"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"}